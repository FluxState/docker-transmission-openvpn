version: 2.1

orbs:
  git-shallow-clone: guitarrapc/git-shallow-clone@2.4.0

commands:
  calculate-tag-name:
    description: "Calculates the target tag name for Docker image."
    steps:
      - run:
          name: Calculate tag to set for the built Docker image.
          command: |
            if [ ! -z $CIRCLE_TAG ]; then
              TAG_VERSION=$CIRCLE_TAG
            elif [ "$CIRCLE_BRANCH" = "edge" ]; then
              TAG_VERSION=latest
            else
              TAG_VERSION=$CIRCLE_BRANCH;
            fi
            TAG_PLATFORM="$(uname -m)"
            REVISION="$(git ls-remote https://github.com/transmission/transmission.git HEAD | awk '{print substr ($0, 0, 7)}')"

            echo "export IMAGE_TAG='$TAG_VERSION-$TAG_PLATFORM'" >> $BASH_ENV
            echo "export REVISION='${REVISION}-${CIRCLE_SHA1}'" >> $BASH_ENV
            echo "export TAG_VERSION='$TAG_VERSION'" >> $BASH_ENV

  install-git:
    description: "Installs Git binary."
    steps:
      - run:
          name: Install Git binary
          command: sudo apt-get update && DEBIAN_FRONTEND=noninteractive sudo apt-get install -y git

  login-to-dockerhub:
    description: "Logs into DockerHub."
    steps:
      - run:
          name: Log into DockerHub.
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

  build-and-push:
    description: "Builds and pushes images."
    parameters:
      build-context:
        type: string
      image-name:
        type: string
      platform:
        type: string
    steps:
      - run:
          name: Build and push images
          command: |
            docker buildx build -t << parameters.image-name >>:$IMAGE_TAG --progress plain \
              --build-arg CI=1 \
              --build-arg REVISION=$REVISION \
              --platform << parameters.platform >> \
              --progress plain \
              --push << parameters.build-context >>

  create-manifest:
    description: "Creates combined manifest."
    parameters:
      image-name:
        type: string
    steps:
      - run:
          name: Create manifest
          command: |
            docker manifest create \
            << parameters.image-name >>:$TAG_VERSION \
            --amend << parameters.image-name >>:$TAG_VERSION-aarch64 \
            --amend << parameters.image-name >>:$TAG_VERSION-x86_64
            docker manifest push << parameters.image-name >>:$TAG_VERSION


defaults: &defaults
  environment:
    DEBIAN_FRONTEND: "noninteractive"
    DOCKER_BUILDKIT: "1"
  machine:
    image: ubuntu-2004:202111-02
  parameters:
    image-name:
      type: string

build-defaults: &build-defaults
  <<: *defaults
  parameters:
    build-context:
      type: string
    image-name:
      type: string


jobs:
  build:
    <<: *build-defaults
    steps:
      - git-shallow-clone/checkout:
          fetch_depth: 1
      - install-git
      - login-to-dockerhub
      - calculate-tag-name
      - build-and-push:
          build-context: << parameters.build-context >>
          image-name: << parameters.image-name >>
          platform: "linux/amd64"

  build-arm:
    <<: *build-defaults
    resource_class: arm.medium
    steps:
      - git-shallow-clone/checkout:
          fetch_depth: 1
      - install-git
      - login-to-dockerhub
      - calculate-tag-name
      - build-and-push:
          build-context: << parameters.build-context >>
          image-name: << parameters.image-name >>
          platform: "linux/arm64"

  manifest:
    <<: *defaults
    steps:
      - login-to-dockerhub
      - calculate-tag-name
      - create-manifest:
          image-name: << parameters.image-name >>


workflows:

  build-docker-images:
    jobs:
      - build:
          name: build-transmission-vpn-edge-images
          context: dockerhub
          image-name: fluxstate/transmission-vpn-edge
          build-context: "."
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - build-arm:
          name: build-transmission-vpn-edge-images-arm
          context: dockerhub
          image-name: fluxstate/transmission-vpn-edge
          build-context: "."
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - manifest:
          name: create-manifest
          context: dockerhub
          image-name: fluxstate/transmission-vpn-edge
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
          requires:
            - build-transmission-vpn-edge-images
            - build-transmission-vpn-edge-images-arm

      - build:
          name: build-reverse-proxy-images
          context: dockerhub
          image-name: fluxstate/transmission-vpn-proxy-edge
          build-context: "proxy"
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - build-arm:
          name: build-reverse-proxy-images-arm
          context: dockerhub
          image-name: fluxstate/transmission-vpn-proxy-edge
          build-context: "proxy"
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - manifest:
          name: create-manifest-proxy
          context: dockerhub
          image-name: fluxstate/transmission-vpn-proxy-edge
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
          requires:
            - build-reverse-proxy-images
            - build-reverse-proxy-images-arm

      - build:
          name: build-rss-plugin-images
          context: dockerhub
          image-name: fluxstate/transmission-rss-edge
          build-context: "plugins/rss"
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - build-arm:
          name: build-rss-plugin-images-arm
          context: dockerhub
          image-name: fluxstate/transmission-rss-edge
          build-context: "plugins/rss"
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - manifest:
          name: create-manifest-rss
          context: dockerhub
          image-name: fluxstate/transmission-rss-edge
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
          requires:
            - build-rss-plugin-images
            - build-rss-plugin-images-arm
