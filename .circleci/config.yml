version: 2.1

commands:
  calculate-tag-name:
    description: "Calculates the target tag name for Docker image."
    steps:
      - run:
          name: Calculate tag to set for the built Docker image.
          command: |
            if [ ! -z $CIRCLE_TAG ]; then
              TAG_VERSION=$CIRCLE_TAG
            elif [ "$CIRCLE_BRANCH" = "edge" ]; then
              TAG_VERSION=latest
            else
              TAG_VERSION=$CIRCLE_BRANCH;
            fi
            REVISION="$(git ls-remote https://github.com/transmission/transmission.git HEAD | awk '{print substr ($0, 0, 7)}')"

            echo "export IMAGE_TAG=$TAG_VERSION$TAG_DISTRO" >> $BASH_ENV
            echo "export REVISION='${CIRCLE_SHA1}-${REVISION}'" >> $BASH_ENV

  install-git:
    description: "Installs Git binary."
    steps:
      - run:
          name: Install Git binary
          command: sudo apt update && sudo apt install -y git

  login-to-dockerhub:
    description: "Logs into DockerHub."
    steps:
      - run:
          name: Log into DockerHub.
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

  build-and-push:
    description: "Builds and pushes images."
    steps:
      - run:
          name: Build and push images
          command: |
            docker buildx build -t << parameters.image-name >>:$IMAGE_TAG --progress plain \
              --build-arg CI=1 \
              --build-arg REVISION=$REVISION \
              --push << parameters.build-context >>


defaults: &defaults
  environment:
    DEBIAN_FRONTEND: "noninteractive"
    DOCKER_BUILDKIT: "1"
  machine:
    image: ubuntu-2004:202111-02
  parameters:
    image-name:
      type: string
    build-context:
      type: string

build_parameters:
  image-name:
    type: string
  build-context:
    type: string

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - install-git
      - login-to-dockerhub
      - calculate-tag-name
      - build-and-push

  build-arm:
    <<: *defaults
    resource_class: arm.medium
    steps:
      - checkout
      - install-git
      - login-to-dockerhub
      - calculate-tag-name
      - build-and-push


workflows:

  build-docker-images:
    jobs:
      - build:
          name: build-transmission-vpn-edge-images
          context: dockerhub
          image-name: fluxstate/transmission-vpn-edge
          build-context: "."
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - build-arm:
          name: build-transmission-vpn-edge-images
          context: dockerhub
          image-name: fluxstate/transmission-vpn-edge
          build-context: "."
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/

      - build:
          name: build-reverse-proxy-images
          context: dockerhub
          image-name: fluxstate/transmission-vpn-proxy-edge
          build-context: "proxy"
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - build-arm:
          name: build-reverse-proxy-images
          context: dockerhub
          image-name: fluxstate/transmission-vpn-proxy-edge
          build-context: "proxy"
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/

      - build:
          name: build-rss-plugin-images
          context: dockerhub
          image-name: fluxstate/transmission-rss-edge
          build-context: "plugins/rss"
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
      - build-arm:
          name: build-rss-plugin-images
          context: dockerhub
          image-name: fluxstate/transmission-rss-edge
          build-context: "plugins/rss"
          filters:
            branches:
              only:
                - edge
            tags:
              only: /^\d+\.\d+.*/
